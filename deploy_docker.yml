- name: Deploy Dockerized Application
  hosts: localhost
  become: yes
  tasks:
    - name: Ensure Docker is installed
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Log in to Docker Hub
      shell: |
        echo "{{ docker_password | quote }}" | docker login -u "{{ docker_username | quote }}" --password-stdin
      register: docker_login_result
      failed_when: docker_login_result.rc != 0
      no_log: true  # Hide sensitive output

    - name: Check if port 8083 is in use
      shell: lsof -i :8083
      register: port_check
      failed_when: false  # Do not fail if no process is found on the port

    - name: Kill the process using port 8083 (if any)
      shell: "kill -9 $(lsof -ti :8083)"
      when: port_check.stdout != ""
      ignore_errors: yes

    - name: Wait for 3 seconds to ensure port is released
      pause:
        seconds: 3

    - name: Stop and remove existing container (if running)
      shell: |
        docker stop demo-app || true
        docker rm demo-app || true
      ignore_errors: yes

    - name: Pull Docker image
      shell: docker pull {{ docker_image }}

    - name: Run Docker container
      shell: docker run -d --name demo-app -p 8083:8080 {{ docker_image }}

    - name: Verify the container is running
      shell: docker ps | grep demo-app
      register: container_status
      failed_when: container_status.rc != 0

    - name: Display container status
      debug:
        msg: "Docker container 'demo-app' is running. Status:\n{{ container_status.stdout_lines }}"
